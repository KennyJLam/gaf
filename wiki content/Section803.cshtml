<h2>Creatiing a Consumer Functions Assembly</h2>
<p>GAF Lab can be used to run any GA that can be run using the GAF, however, before using GAF Lab it is important to understand the concept
of 'Consumer Functions'.</p>
<p>When working with the Genetic Algorithm Framework (GAF) without using GAF Lab, the consumer/developer provides the Fitness and Terminate functions and passes
these as delegates to the GAF. In addition an initial population is defined during 
initialisation of the GA. In order to use GAF Lab it is neccessary to implement these delegates and methods in a separate assembly so that these can be 
loaded into GAF Lab using the file menu. The simplest way to do 
this is to create a new Class Library project in Xamarin Studio or Visual Studio and include a class that 
implements the IGafLabConsumerFunctions interface.</p>
<p>A class implemeting the IGafLabConsumerFunctions interface must implement the following methods.</p>
<ul>
<li>Fitness and Termination functions: These are standard GAF Fitness and Terminate functions but must be called EvaluateFitness anf TerminateAlgorithm respectively.</li>
<li>CreatePopulation: This method should return an appropriate initial population.</li>
	<li>CreateGenerationCompleteMessage: This method can be used to return useful information about the 
generation that has just been created. Any values returned here will be desplayed within the GAF Lab application. 
If this functionalty is not required, simply return <em>null</em> or <em>string.Empty</em>.</li>
	<li>CreateRunCompleteMessage: This method is similar to the CreateGenerationCompleteMessage method however, 
	the method is called at the end of the GA run. If this functionalty is not required, simply return <em>null</em> or <em>string.Empty</em>.</li>

<p>An example of such a class, taken from the <a href="/gaf/section/501">Binary F6 example</a>, is shown below.</p>
<pre><code>@Html.Action("LoadCodeFile", "Gaf", new { filename = "/Content/txt/gaf/803/BinaryF6.cs.txt" })</code></pre>






